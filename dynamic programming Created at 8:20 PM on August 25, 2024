It's 8:20pm August 25, 2024.
https://leetcode.com/problems/regular-expression-matching/description/  10. Regular Expression Matching
"i guess you could call this backtracking or you could call it uh whatever else you wanted i'm just going to call it dfs"
I think backtracking and DFS are similar concepts and can be used interchangeably. Call it whatever you want, whether it's DFS or backtracking
https://www.youtube.com/watch?v=HAA8mgxlov8  Regular Expression Matching - Dynamic Programming Top-Down Memoization - Leetcode 10
https://www.youtube.com/watch?v=_i4Yxeh5ceQ  Dynamic Programming 1D - Full Course - Python
https://www.youtube.com/watch?v=qMky6D6YtXU  Dynamic Programming 2D - Full Course - Python

It's 17:54 August 30, 2024. I just copy the code below for studying.
It's 11:15? August 31, 2024. I took naps while studying,It's 17:06 August 31, 2024. 
class solution:
    def ismatch(self,s,p):
        cache={}
        def dfs(i,j):
            if (i,j) in cache:
                return cache[(i,j)]
            if i >= len(s) and j >= len(p):
                return True
            if j >= len(p):
                return False
            match=i<len(s) and (s[i]==p[j] or p[j]==".")
            if (j+1) < len(p) and p[j+1]=="*":
                cache[(i,j)]=(dfs(i,j+2) or (match and dfs(i+1,j)))
                return cache[(i,j)]
            if match:
                cache[(i,j)]=dfs(i+1,j+1)
                return cache[(i,j)]
            cache[(i,j)]=False
            return False
        return dfs(0,0)

s = "aab"
p = "a*"
a=solution()
a.ismatch(s,p)
print(a)

s = "bbc"
p = "a*b*c"
a=solution()
a.ismatch(s,p)
print(a)
