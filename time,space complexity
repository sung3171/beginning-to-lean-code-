The start time is around 15:24 on September 2, 2024.
I document my undertand of caculating time complexity and space complexity.

class Solution:
    def isPalindrome(self,x:int)->bool:
        if x<0:
            return False
        temp=x
        reverse=0
        while temp>0:
            reverse=reverse*10+temp%10
            temp//=10
        return reverse==x

class Solution:
    def isPalindrome(self, x):
        if x < 0 or (x != 0 and x % 10 == 0):
            return False
        reverse = 0
        while x > reverse:
            reverse = reverse * 10 + x % 10
            x //= 10
        return reverse == x or x == reverse // 10

def example_algorithm(arr):
    total = 0
    for i in range(len(arr)):
        for j in range(len(arr)):
            total += arr[i] * arr[j]
    return total

class Solution:
    def binarySearch(self, arr, target, left, right):
        if left > right:
            return -1  # 타겟 값을 찾지 못한 경우

        mid = (left + right) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            return self.binarySearch(arr, target, mid + 1, right)
        else:
            return self.binarySearch(arr, target, left, mid - 1)
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)
