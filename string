eof occurs when adding a missing punctuation mark or using the correct indentation
a=[[0]*5 for _ in range(5)]
for row in a:
    print(' '.join(map(str,row))

https://stackoverflow.com/questions/72346341/unexpected-eof-while-parsing-how-do-i-fix-my-code
usage of eval
desc = ['(4,1);(1,4)', '(2,3);(3,2)', '(4,2);(2,4);(1,3);(3,1)', '(1,2);(2,1);(4,3);(3,4)'] 
for x in range(len(desc)):
    desc[x] = desc[x].split(';')
print(desc)
[['(4,1)', '(1,4)'], ['(2,3)', '(3,2)'], ['(4,2)', '(2,4)', '(1,3)', '(3,1)'], ['(1,2)', '(2,1)', '(4,3)', '(3,4)']]
desc = ['(4,1);(1,4)', '(2,3);(3,2)', '(4,2);(2,4);(1,3);(3,1)', '(1,2);(2,1);(4,3);(3,4)'] 
for x in range(len(desc)):
    desc[x] = desc[x].split(';')
    for y in range(len(desc[x])): 
        desc[x][y] = eval(desc[x][y])
print(desc)          
[[(4, 1), (1, 4)], [(2, 3), (3, 2)], [(4, 2), (2, 4), (1, 3), (3, 1)], [(1, 2), (2, 1), (4, 3), (3, 4)]]

https://stackoverflow.com/questions/21517024/how-to-join-values-of-map-in-python
string
something new: \n  split("\n")  split  """0,15... """  lambda,a[1]
su_array = [(0, 15), (1, 14), (2, 0), (3, 1), (4, 12), (5, 6), (6, 4), (7, 2), (8, 8), (9, 13), (10, 3), (11, 7), (12, 9), (13, 10), (14, 11), (15, 5)]
print(", ".join(str(a[1]) for a in su_array))
print(", ".join(map(lambda a: str(a[1]), su_array)))
print(', '.join([str(b) for _, b in su_array]))
print(", ".join(str(y) for x, y in su_array))
print(",".join(str(j) for i,j in su_array))

original = """0,15
1,14
2,0
3,1
4,12
5,6
6,4
7,2
8,8
9,13
10,3
11,7
12,9
13,10
14,11
15,5"""
original_tuples = [tuple(i for i in original.split("\n"))]
print(original_tuples)
original_tuples = [tuple(i.split(" ")) for i in original.split("\n")]
print(original_tuples)
original_tuples = [tuple(i.split(",")) for i in original.split("\n")]
print(original_tuples)
original_tuples_ans=",".join(map(str,[j for i,j in original_tuples]))
print(original_tuples_ans)

original = """0,15
1,14
2,0
3,1
4,12
5,6
6,4
7,2
8,8
9,13
10,3
11,7
12,9
13,10
14,11
15,5"""
print([i.split(",")[1] for i in original.split("\n")])
print(",".join([i.split(",")[1] for i in original.split("\n")]))




