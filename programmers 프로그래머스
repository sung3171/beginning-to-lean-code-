str = input()
a=str
b=''
for i,word in enumerate(a):
    if word.isupper==True:
        b+=a[i].lower()
        
    else:
        b+=a[i].upper()


a = input()
b=''
for i,word in enumerate(a):
    if word.isupper():
        a=a.replace(word, word.lower())
    else:
        a=a.replace(word, word.upper())
#a='add' 
       
    
https://stackoverflow.com/questions/72604976/loop-through-a-string-with-variable-and-replace-an-uppercase-it-with-in-python    
string = "hOw Are yOu?"
for x in string:
    if x.isupper():
        string = string.replace(x, "#")
        print(string)
    else:
        print(string)

''.join([i if not i.isupper() else '#' for i in string])
https://school.programmers.co.kr/learn/courses/30/lessons/181949/solution_groups?language=python3  대소문자 바꿔서 출력하기
print(''.join(x.upper() if x == x.lower() else x.lower() for x in input()))


https://school.programmers.co.kr/learn/courses/30/lessons/181944/solution_groups?language=python3  홀짝 구분하기
n=int(input())
print(f"{n} is {'eovdedn'[n&1::2]}")
n = int(input())
print(f"{n} is odd" if n % 2 else f"{n} is even")













The start time is about 13:00 on Sunday, September 29, 2024.
https://school.programmers.co.kr/learn/courses/30/lessons/181879/solution_groups?language=python3
길이에 따른 연산
def solution(num_list):
    if len(num_list) >= 11:
        return eval('+'.join(list(map(str, num_list))))
    else:
        return eval('*'.join(list(map(str, num_list))))

from math import prod
def solution(num_list):
    return sum(num_list) if len(num_list)>=11 else prod(num_list)


https://www.geeksforgeeks.org/python-multiply-numbers-list-3-different-ways/
list = [1, 2, 3] 
def multiplyList(myList):

    # Multiply elements one by one
    result = 1
    for x in myList:
        result = result * x
    return result

from operator import*
list = [1, 2, 3]
m = 1
for i in list:
  # multiplying all elements in the given list 
  # using mul function of operator module
    m = mul(i, m)
# printing the result
print(m)

from functools import reduce.
reduce(lambda a,b:a*b,num_list)
result = reduce((lambda x, y: x * y), list)
from math import prod
result = math.prod(list)
from numpy import prod
result = numpy.prod(list)

Note:mul reduce prod

https://stackoverflow.com/questions/55840593/how-to-simplify-in-a-single-line-for-loop-the-multiplication-of-the-numbers-of-a
from functools import reduce
import operator
num_list = [5,7,3,8]
reduce(operator.mul, num_list)
Note: mul instead of lambda


With map (not as good, but another approach to the problem):
list(map(lambda x: x*5,[5, 10, 15, 20, 25]))
also, if you happen to be using numpy or numpy arrays, you could use this:
import numpy as np
list(np.array(x) * 5)

from functools import partial as p
from operator import mul
map(p(mul,5),my_list)
Note:partial

from functools import *
https://www.geeksforgeeks.org/partial-functions-python/
# A normal function
def add(a, b, c):
    return 100 * a + 10 * b + c
# A partial function with b = 1 and c = 2
add_part = partial(add, c = 2, b = 1)
# Calling partial function
print(add_part(3))
Note:partial


https://school.programmers.co.kr/learn/courses/30/lessons/181878/solution_groups?language=python3&type=all
원하는 문자열 찾기
def solution(myString, pat):
    return int(pat.lower() in myString.lower())

def solution(myString, pat):
    return min(1, myString.lower().find(pat.lower()) + 1)
Note:find function
The end time is about 15:30 on Sunday, September 29, 2024.



https://school.programmers.co.kr/learn/courses/30/lessons/181870/solution_groups?language=python3
ad 제거하기
def solution(strArr):
    return list(filter(lambda x:'ad' not in x, strArr))
Note:filter



------------------------------------------------------------------------------------------------------------------------------------------------------------------------








It's 08:57pm on Monday, September 30, 2024.
https://school.programmers.co.kr/learn/courses/30/lessons/181862/solution_groups?language=python3
세 개의 구분자
def solution(myStr):
    answer = [x for x in myStr.replace('a', ' ').replace('b', ' ').replace('c', ' ').split() if x]
    return answer if answer else ['EMPTY']

import re
def solution(myStr):
    answer = [m for m in re.split('a|b|c',myStr) if m]
    if len(answer)==0:
        answer=["EMPTY"]
    return answer
Note: re function



https://school.programmers.co.kr/learn/courses/30/lessons/181861/solution_groups?language=python3
배열의 원소만큼 추가하기
def solution(arr):
    return [i for i in arr for j in range(i)]

def solution(arr):
    answer = []
    for num in arr:
        answer += [num] * num
    return answer
Bas mfmypj lradf whuch lrukd '+=' y;fpaks. a;;fks() mfghys ur mypf mfmypj fttucufkg
Note:comment += operator, bad memory usage
append() method is better than += operator in the perspective of memory

https://school.programmers.co.kr/learn/courses/30/lessons/181864/solution_groups?language=python3
문자열 바꿔서 찾기


def solution(myString, pat):
    return int(''.join(['A' if i == 'B' else 'B' for i in pat]) in myString)
Note:int( in )

https://school.programmers.co.kr/learn/courses/30/lessons/181885/solution_groups?language=python3
할 일 목록
def solution(todo_list, finished):
    answer = []
    for i,s in enumerate(finished):
        if int(s)==0:
            answer.append(todo_list[i])
    return answer
Note:finished=[true, false, true, false], handle with the int function.
def solution(todo_list, finished):
    return [work for idx, work in enumerate(todo_list) if not finished[idx]]

When I see ChatGPT, I'm encouraged by its depth..
챗지피티를 볼때면 그의 깊음에 힘이나..








